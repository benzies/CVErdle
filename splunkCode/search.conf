index="cve_index" 
| regex cve.description.description_data{}.value!=".*\*\*.*" 
| regex cve.CVE_data_meta.ID="CVE-\d{4}-\d{5}$" 
| rex field=cve.CVE_data_meta.ID "CVE-(?<yearandcve>\d{4}-\d{5})" 
| rex field=cve.CVE_data_meta.ID "CVE-\d{4}-(?<cve>\d{5})" 
| table cve.CVE_data_meta.ID lastModifiedDate yearandcve
    impact.baseMetricV3.cvssV3.baseScore
    impact.baseMetricV2.cvssV2.baseScore
    impact.baseMetricV2.exploitabilityScore 
    impact.baseMetricV3.exploitabilityScore
    linecount cve
    impact.baseMetricV3.cvssV3.confidentialityImpact 
    impact.baseMetricV2.cvssV2.confidentialityImpact
    impact.baseMetricV3.cvssV3.baseSeverity 
    cve.description.description_data{}.value
    cve.problemtype.problemtype_data{}.description{}.value 
| rename impact.baseMetricV3.cvssV3.baseScore AS v3BaseScore impact.baseMetricV3.cvssV3.confidentialityImpact AS v3impact impact.baseMetricV2.cvssV2.baseScore 
    AS v2BaseScore impact.baseMetricV2.cvssV2.confidentialityImpact AS v2impact impact.baseMetricV3.cvssV3.baseSeverity AS v3Severity impact.baseMetricV2.exploitabilityScore AS v2ExploitScore impact.baseMetricV3.exploitabilityScore AS v3ExploitScore 
    cve.description.description_data{}.value AS description 
| eval descriptionLength=len(description) 
| where v3Severity="CRITICAL" 
| eval
    Nov3BaseScore = tonumber(v3BaseScore),
    Nov2BaseScore = tonumber(v2BaseScore),
    Nov2ExploitScore = tonumber(v2ExploitScore),
    Nov3ExploitScore = tonumber(v3ExploitScore),
    Nolinecount = tonumber(linecount),
    NodescriptionLength = tonumber(descriptionLength) 
| eval counted=Nov3BaseScore+Nov2BaseScore+Nov2ExploitScore+Nov3ExploitScore+Nolinecount+NodescriptionLength 
| dedup counted 
| sort counted | dedup cve